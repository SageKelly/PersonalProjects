<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:local="clr-namespace:ClockWatcher"
	xmlns:System="clr-namespace:System;assembly=mscorlib"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
	mc:Ignorable="d"
	x:Class="ClockWatcher.TimeEntry"
	x:Name="UserControl"
	d:DesignWidth="375" d:DesignHeight="179.5" RenderTransformOrigin="0.5,0.5"
    Width="{DynamicResource creationWidth}" Height="44.92"
    KeyDown="UserControl_KeyDown" Focusable="True" Loaded="FocusOnComment">
    <UserControl.Resources>
        <Thickness x:Key="borderDim">0,0,1,0</Thickness>
        <Thickness x:Key="labelPadding">2,0</Thickness>
        <Color x:Key="borderColor">#FF151E3E</Color>
        <Color x:Key="buttonColorBackground">#FFB3D6E6</Color>
        <Storyboard x:Key="OnLoaded1">
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="UserControl">
        		<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1">
        			<EasingDoubleKeyFrame.EasingFunction>
        				<BounceEase EasingMode="EaseOut" Bounces="2" Bounciness="5"/>
        			</EasingDoubleKeyFrame.EasingFunction>
        		</EasingDoubleKeyFrame>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="UserControl">
        		<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1">
        			<EasingDoubleKeyFrame.EasingFunction>
        				<BounceEase EasingMode="EaseOut" Bounces="2" Bounciness="5"/>
        			</EasingDoubleKeyFrame.EasingFunction>
        		</EasingDoubleKeyFrame>
        	</DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Color x:Key="scrollBGColor">#FF637AAA</Color>
        <Color x:Key="grayCommentColor">#FFA0A0A0</Color>
        <Color x:Key="blackCommentColor">Black</Color>
    </UserControl.Resources>
	<UserControl.Triggers>
		<EventTrigger RoutedEvent="FrameworkElement.Loaded">
			<BeginStoryboard Storyboard="{StaticResource OnLoaded1}"/>
		</EventTrigger>
	</UserControl.Triggers>
    <UserControl.RenderTransform>
        <TransformGroup>
            <ScaleTransform/>
            <SkewTransform/>
            <RotateTransform/>
            <TranslateTransform/>
        </TransformGroup>
    </UserControl.RenderTransform>

	<Grid x:Name="LayoutRoot" HorizontalAlignment="Left" VerticalAlignment="Top" Width="{DynamicResource creationWidth}" Height="{DynamicResource creationHeight}">
		<i:Interaction.Triggers>
			<i:EventTrigger EventName="SourceUpdated" SourceName="{Binding isCollapsed, ElementName=UserControl}">
				<i:Interaction.Behaviors>
					<ei:ConditionBehavior>
						<ei:ConditionalExpression>
							<ei:ComparisonCondition LeftOperand="{Binding isCollapsed, ElementName=UserControl}" RightOperand="true"/>
						</ei:ConditionalExpression>
					</ei:ConditionBehavior>
				</i:Interaction.Behaviors>
				<ei:GoToStateAction x:Name="Collapsing" TargetName="LayoutRoot" TargetObject="{Binding ElementName=UserControl, Mode=OneWay}" StateName="Collapsed"/>
			</i:EventTrigger>
			<i:EventTrigger EventName="SourceUpdated" SourceName="{Binding isCollapsed, ElementName=UserControl}">
				<i:Interaction.Behaviors>
					<ei:ConditionBehavior>
						<ei:ConditionalExpression>
							<ei:ComparisonCondition LeftOperand="{Binding isCollapsed, ElementName=UserControl}" RightOperand="false"/>
						</ei:ConditionalExpression>
					</ei:ConditionBehavior>
				</i:Interaction.Behaviors>
				<ei:GoToStateAction x:Name="Expanding" StateName="Visible"/>
			</i:EventTrigger>
		</i:Interaction.Triggers>
		<i:Interaction.Behaviors>
			<ei:DataStateBehavior x:Name="detailsBehavior" Binding="{Binding detailsExpanded, ElementName=UserControl}" TrueState="detailsExpandedView" FalseState="detailsCollapsedView" Value="true"/>
			<ei:DataStateBehavior x:Name="selectedBehavior" Binding="{Binding isSelected, ElementName=UserControl}" Value="true" TrueState="selectedState" FalseState="notSelectedState"/>
		</i:Interaction.Behaviors>
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="VisibilityChange">
				<VisualState x:Name="Collapsed">
					<Storyboard>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="UserControl">
							<EasingDoubleKeyFrame KeyTime="0" Value="44.92"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.35" Value="6">
								<EasingDoubleKeyFrame.EasingFunction>
									<BounceEase EasingMode="EaseOut" Bounciness="7"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
						</DoubleAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="Visible">
					<Storyboard>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="UserControl">
							<EasingDoubleKeyFrame KeyTime="0" Value="6"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.35" Value="44.92">
								<EasingDoubleKeyFrame.EasingFunction>
									<BounceEase EasingMode="EaseOut" Bounciness="7"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
						</DoubleAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="detailsExpandedView">
					<Storyboard>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="detailsBorder">
							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="40.92"/>
						</DoubleAnimationUsingKeyFrames>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="detailsBorder">
							<EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="43.92"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="140">
								<EasingDoubleKeyFrame.EasingFunction>
									<BounceEase EasingMode="EaseOut" Bounciness="5" Bounces="3"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
						</DoubleAnimationUsingKeyFrames>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="UserControl">
							<EasingDoubleKeyFrame KeyTime="0" Value="43.92"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="84.92"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="180.92">
								<EasingDoubleKeyFrame.EasingFunction>
									<BounceEase EasingMode="EaseOut" Bounciness="5"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
						</DoubleAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="detailsCollapsedView">
					<Storyboard>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="detailsBorder">
							<EasingDoubleKeyFrame KeyTime="0" Value="40.92"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="40.92"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
								<EasingDoubleKeyFrame.EasingFunction>
									<CircleEase EasingMode="EaseIn"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
						</DoubleAnimationUsingKeyFrames>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="detailsBorder">
							<EasingDoubleKeyFrame KeyTime="0" Value="140"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="43.92"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="43.92">
								<EasingDoubleKeyFrame.EasingFunction>
									<CircleEase EasingMode="EaseIn"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
						</DoubleAnimationUsingKeyFrames>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="UserControl">
							<EasingDoubleKeyFrame KeyTime="0" Value="180.92"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="84.92"/>
							<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="43.92">
								<EasingDoubleKeyFrame.EasingFunction>
									<CircleEase EasingMode="EaseIn"/>
								</EasingDoubleKeyFrame.EasingFunction>
							</EasingDoubleKeyFrame>
						</DoubleAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="selectedState">
					<Storyboard RepeatBehavior="Forever">
						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="entryBorder">
							<EasingColorKeyFrame KeyTime="0" Value="#FF151E3E"/>
							<EasingColorKeyFrame KeyTime="0:0:0.2" Value="{StaticResource buttonColorBackground}"/>
							<EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF151E3E"/>
						</ColorAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="notSelectedState"/>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
		<Border x:Name="entryBorder" BorderThickness="3" CornerRadius="1" Padding="1" Background="#FF9DB6BF" HorizontalAlignment="Left" VerticalAlignment="Top">
			<Border.BorderBrush>
				<SolidColorBrush Color="{StaticResource borderColor}"/>
			</Border.BorderBrush>
			<Grid x:Name="borderGrid">
				<StackPanel x:Name="mainStack" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top">
					<Border x:Name="timeInBorder" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="{StaticResource borderDim}" Padding="{StaticResource labelPadding}">
						<Border.BorderBrush>
							<SolidColorBrush Color="{StaticResource borderColor}"/>
						</Border.BorderBrush>
						<StackPanel x:Name="timeInStack" Orientation="Vertical" Height="31.92" Width="50.46">
							<Label x:Name="timeInLabel" Content="Time In" VerticalAlignment="Top" Padding="{StaticResource labelPadding}" BorderThickness="0,0,0,1" ToolTip="When this entry started">
								<Label.BorderBrush>
									<SolidColorBrush Color="{StaticResource borderColor}"/>
								</Label.BorderBrush>
							</Label>
                            <TextBlock x:Name="timeInBlock" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding TimeIn, StringFormat={}{0:hh:mm tt}}" VerticalAlignment="Top"/>
						</StackPanel>
					</Border>
					<Border x:Name="timeOutBorder" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="{StaticResource borderDim}" Padding="{StaticResource labelPadding}">
						<Border.BorderBrush>
							<SolidColorBrush Color="{StaticResource borderColor}"/>
						</Border.BorderBrush>
						<StackPanel x:Name="timeOutStack" Orientation="Vertical" Height="31.92" Width="54.46">
							<Label x:Name="timeOutLabel" Content="Time Out" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="{StaticResource labelPadding}" BorderThickness="0,0,0,1" ToolTip="When this entry ended">
								<Label.BorderBrush>
									<SolidColorBrush Color="{StaticResource borderColor}"/>
								</Label.BorderBrush>
							</Label>
                            <TextBlock x:Name="timeOutBlock" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding TimeOut,StringFormat={}{0:hh:mm tt}}" VerticalAlignment="Top" Padding="{StaticResource labelPadding}"/>
						</StackPanel>
					</Border>
					<Border x:Name="timeSpentBorder" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="{StaticResource borderDim}" Padding="{StaticResource labelPadding}">
						<Border.BorderBrush>
							<SolidColorBrush Color="{StaticResource borderColor}"/>
						</Border.BorderBrush>
						<StackPanel x:Name="timeSpentStack" Orientation="Vertical" Height="31.92" Width="63.653">
							<Label x:Name="timeSpentLabel" Content="Time Spent" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="{StaticResource labelPadding}" BorderThickness="0,0,0,1" ToolTip="The time spent during this entry">
								<Label.BorderBrush>
									<SolidColorBrush Color="{StaticResource borderColor}"/>
								</Label.BorderBrush>
							</Label>
                            <TextBlock x:Name="timeSpentBlock" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding TimeSpent,StringFormat={}{0:hh}:{0:mm}:{0:ss}}" VerticalAlignment="Top" Padding="{StaticResource labelPadding}"/>
						</StackPanel>
					</Border>
					<Button x:Name="alarmButton" Content="Alarm" HorizontalAlignment="Center" BorderThickness="0,0,1,0" ToolTip="Open the Alarm menu">
						<Button.Background>
							<SolidColorBrush Color="{StaticResource buttonColorBackground}"/>
						</Button.Background>
						<Button.BorderBrush>
							<SolidColorBrush Color="{StaticResource borderColor}"/>
						</Button.BorderBrush>
					</Button>
					<StackPanel x:Name="commentStack" Orientation="Horizontal">
						<StackPanel x:Name="innerCommentStack">
							<TextBox x:Name="commentBox" TextWrapping="Wrap" VerticalAlignment="Top"
                                     Padding="{StaticResource labelPadding}"
								BorderThickness="0" SourceUpdated="commentBox_SourceUpdated" MinWidth="117.51"
                                     Text="{Binding Comment, Mode=TwoWay}"
                                     GotFocus="commentBox_GotFocus" LostFocus="commentBox_LostFocus"
								TextChanged="commentBox_TextChanged">
								<TextBox.Foreground>
									<SolidColorBrush Color="{StaticResource grayCommentColor}"/>
								</TextBox.Foreground>
								<TextBox.BorderBrush>
									<SolidColorBrush Color="{StaticResource borderColor}"/>
								</TextBox.BorderBrush>
							</TextBox>
							<Button x:Name="commentConfirmButton" Content="Confirm" Click="commentConfirmButton_Click" ToolTip="Confirm Comment"/>
						</StackPanel>
						<Button x:Name="commentButton" VerticalAlignment="Top" Content="Ad" BorderThickness="1,0" Padding="{StaticResource labelPadding}"
							Click="detailsButton_Click" ToolTip="Add comment details">
							<Button.Background>
								<SolidColorBrush Color="{StaticResource buttonColorBackground}"/>
							</Button.Background>
							<Button.BorderBrush>
								<SolidColorBrush Color="{StaticResource borderColor}"/>
							</Button.BorderBrush>
						</Button>
					</StackPanel>
					<Button x:Name="deleteButton" Content="X" Padding="{StaticResource labelPadding}" HorizontalAlignment="Left" VerticalAlignment="Top" BorderBrush="{x:Null}" BorderThickness="{StaticResource borderDim}" Click="deleteButton_Click" ToolTip="Delete Time Entry">
						<Button.Background>
							<SolidColorBrush Color="{StaticResource buttonColorBackground}"/>
						</Button.Background>
					</Button>
				</StackPanel>

			</Grid>
		</Border>
		<Border x:Name="detailsBorder" HorizontalAlignment="Left" VerticalAlignment="Top" Width="360" Height="43.92" BorderThickness="3" Panel.ZIndex="-1" RenderTransformOrigin="0.5,0.5" >
			<Border.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Border.RenderTransform>
			<Border.BorderBrush>
				<SolidColorBrush Color="{StaticResource borderColor}"/>
			</Border.BorderBrush>
			<ScrollViewer x:Name="detailsScroll" Panel.ZIndex="-1">
				<ScrollViewer.Background>
					<SolidColorBrush Color="{StaticResource scrollBGColor}"/>
				</ScrollViewer.Background>
				<StackPanel x:Name="buttonStackStack" Orientation="Horizontal" Width="337">
					<Button x:Name="addDetailsButton" Content="+" VerticalAlignment="Top" HorizontalAlignment="Left" Padding="0"/>
					<StackPanel x:Name="detailsStack">
						<StackPanel.Background>
							<SolidColorBrush Color="{StaticResource scrollBGColor}"/>
						</StackPanel.Background>
					</StackPanel>
				</StackPanel>
			</ScrollViewer>
		</Border>
	</Grid>
</UserControl>