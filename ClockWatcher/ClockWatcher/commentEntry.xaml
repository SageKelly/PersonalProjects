<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	x:Class="ClockWatcher.commentEntry"
	x:Name="UserControl"
	d:DesignWidth="63.5" d:DesignHeight="18" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18">
	<UserControl.Resources>
		<Storyboard x:Key="OnLoaded1">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="LayoutRoot">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1">
					<EasingDoubleKeyFrame.EasingFunction>
						<BounceEase EasingMode="EaseOut" Bounciness="5" Bounces="2"/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="LayoutRoot">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1">
					<EasingDoubleKeyFrame.EasingFunction>
						<BounceEase EasingMode="EaseOut" Bounciness="5" Bounces="2"/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
		<Style x:Key="OptionMarkFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
		<SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
		<SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
		<SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
		<SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
		<SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
		<SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
		<SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
		<SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
		<SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
		<Style x:Key="textlessCheck" TargetType="{x:Type CheckBox}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="1" HorizontalAlignment="Center" VerticalAlignment="Center">
								<Grid x:Name="markGrid">
									<Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
									<Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
								</Grid>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasContent" Value="true">
								<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
								<Setter Property="Padding" Value="4,-1,0,0"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
								<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
								<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
								<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
								<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
								<Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
								<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
								<Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="Opacity" TargetName="optionMark" Value="1"/>
								<Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="{x:Null}">
								<Setter Property="Opacity" TargetName="optionMark" Value="0"/>
								<Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>
	<UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource OnLoaded1}"/>
        </EventTrigger>
	</UserControl.Triggers>

	<Grid x:Name="LayoutRoot" Background="#FFC3C3C3" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
		<Grid.RenderTransform>
			<TransformGroup>
				<ScaleTransform/>
				<SkewTransform/>
				<RotateTransform/>
				<TranslateTransform/>
			</TransformGroup>
		</Grid.RenderTransform>
		<StackPanel x:Name="commentStack" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top">
			<CheckBox Content="CheckBox" Style="{DynamicResource textlessCheck}"/>
			<TextBlock x:Name="commentBlock" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding comment, ElementName=UserControl}" VerticalAlignment="Center" Padding="1,0"/>
			<Button x:Name="deleteButton" Content="X" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="1,0" Click="DeleteButton_Click"/>
		</StackPanel>
	</Grid>
</UserControl>